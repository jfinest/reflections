What happens when you initialize a repository? Why do you need to do it?

When you initialize a reposotory you are downloading and adding the .git file into the directory you are currently in. This is basically initializing git so that it knows which files are included in the reposotory just created.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area is like the middle man. You take a file from the working directory add into staging area and then it goes into the repository. This is very valuable b/c it gives you a chance to change your mind before passing files into the repository.

How can you use the staging area to make sure you have one commit per logical
change?

So once you have made your chnages under one logical change then you can add those files into the staging stage. Which gives you control of what files will be passed along before the commit is completed.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
